From 27010ea25103d18013a9a6a1e74b423456a2b35e Mon Sep 17 00:00:00 2001
From: Connor <iconnoroneill@gmail.com>
Date: Tue, 20 Jun 2017 13:16:26 +0930
Subject: [PATCH 04/17] Commit correct folder

Signed-off-by: Connor <iconnoroneill@gmail.com>
---
 .../Database Files/addselftosqlsysadmin.cmd        | 127 +++
 Student Files/VendorMaintenance/DataContext.cs     |  29 +
 Student Files/VendorMaintenance/Payables.dbml      |  47 +
 .../VendorMaintenance/Payables.dbml.layout         |  51 ++
 .../VendorMaintenance/Payables.designer.cs         | 973 +++++++++++++++++++++
 Student Files/VendorMaintenance/Program.cs         |  21 +
 .../VendorMaintenance/Properties/AssemblyInfo.cs   |  36 +
 .../Properties/Resources.Designer.cs               |  63 ++
 .../VendorMaintenance/Properties/Resources.resx    | 117 +++
 .../Properties/Settings.Designer.cs                |  37 +
 .../VendorMaintenance/Properties/Settings.settings |  14 +
 Student Files/VendorMaintenance/Validator.cs       | 122 +++
 .../VendorMaintenance/VendorMaintenance.csproj     | 126 +++
 .../VendorMaintenance/VendorMaintenance.sln        |  20 +
 .../VendorMaintenance/VendorMaintenance.sln.recipe |   5 +
 Student Files/VendorMaintenance/app.config         |   8 +
 .../frmAddModifyVendor.Designer.cs                 | 391 +++++++++
 .../VendorMaintenance/frmAddModifyVendor.cs        | 198 +++++
 .../frmVendorMaintenance.Designer.cs               | 299 +++++++
 .../VendorMaintenance/frmVendorMaintenance.cs      | 138 +++
 20 files changed, 2822 insertions(+)
 create mode 100644 Student Files/Database Files/addselftosqlsysadmin.cmd
 create mode 100644 Student Files/VendorMaintenance/DataContext.cs
 create mode 100644 Student Files/VendorMaintenance/Payables.dbml
 create mode 100644 Student Files/VendorMaintenance/Payables.dbml.layout
 create mode 100644 Student Files/VendorMaintenance/Payables.designer.cs
 create mode 100644 Student Files/VendorMaintenance/Program.cs
 create mode 100644 Student Files/VendorMaintenance/Properties/AssemblyInfo.cs
 create mode 100644 Student Files/VendorMaintenance/Properties/Resources.Designer.cs
 create mode 100644 Student Files/VendorMaintenance/Properties/Resources.resx
 create mode 100644 Student Files/VendorMaintenance/Properties/Settings.Designer.cs
 create mode 100644 Student Files/VendorMaintenance/Properties/Settings.settings
 create mode 100644 Student Files/VendorMaintenance/Validator.cs
 create mode 100644 Student Files/VendorMaintenance/VendorMaintenance.csproj
 create mode 100644 Student Files/VendorMaintenance/VendorMaintenance.sln
 create mode 100644 Student Files/VendorMaintenance/VendorMaintenance.sln.recipe
 create mode 100644 Student Files/VendorMaintenance/app.config
 create mode 100644 Student Files/VendorMaintenance/frmAddModifyVendor.Designer.cs
 create mode 100644 Student Files/VendorMaintenance/frmAddModifyVendor.cs
 create mode 100644 Student Files/VendorMaintenance/frmVendorMaintenance.Designer.cs
 create mode 100644 Student Files/VendorMaintenance/frmVendorMaintenance.cs

diff --git a/Student Files/Database Files/addselftosqlsysadmin.cmd b/Student Files/Database Files/addselftosqlsysadmin.cmd
new file mode 100644
index 0000000..25d307f
--- /dev/null
+++ b/Student Files/Database Files/addselftosqlsysadmin.cmd	
@@ -0,0 +1,127 @@
+@echo off
+rem
+rem ****************************************************************************
+rem
+rem    Copyright (c) Microsoft Corporation. All rights reserved.
+rem    This code is licensed under the Microsoft Public License.
+rem    THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
+rem    ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
+rem    IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
+rem    PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
+rem
+rem ****************************************************************************
+rem
+rem CMD script to add a user to the SQL Server sysadmin role
+rem
+rem Input:  %1 specifies the instance name to be modified. Defaults to SQLEXPRESS.
+rem         %2 specifies the principal identity to be added (in the form "<domain>\<user>").
+rem            If omitted, the script will request elevation and add the current user (pre-elevation) to the sysadmin role.
+rem            If provided explicitly, the script is assumed to be running elevated already.
+rem
+rem Method: 1) restart the SQL service with the '-m' option, which allows a single connection from a box admin
+rem            (the box admin is temporarily added to the sysadmin role with this start option)
+rem         2) connect to the SQL instance and add the user to the sysadmin role
+rem         3) restart the SQL service for normal connections
+rem
+rem Output: Messages indicating success/failure.
+rem         Note that if elevation is done by this script, a new command process window is created: the output of this
+rem         window is not directly accessible to the caller.
+rem
+rem
+setlocal
+set sqlresult=N/A
+if .%1 == . (set /P sqlinstance=Enter SQL instance name, or default to SQLEXPRESS: ) else (set sqlinstance=%1)
+if .%sqlinstance% == . (set sqlinstance=SQLEXPRESS)
+if /I %sqlinstance% == MSSQLSERVER (set sqlservice=MSSQLSERVER) else (set sqlservice=MSSQL$%sqlinstance%)
+if .%2 == . (set sqllogin="%USERDOMAIN%\%USERNAME%") else (set sqllogin=%2)
+rem remove enclosing quotes
+for %%i in (%sqllogin%) do set sqllogin=%%~i
+@echo Adding '%sqllogin%' to the 'sysadmin' role on SQL Server instance '%sqlinstance%'.
+@echo Verify the '%sqlservice%' service exists ...
+set srvstate=0
+for /F "usebackq tokens=1,3" %%i in (`sc query %sqlservice%`) do if .%%i == .STATE set srvstate=%%j
+if .%srvstate% == .0 goto existerror
+rem
+rem elevate if <domain/user> was defaulted
+rem
+if NOT .%2 == . goto continue
+REM echo new ActiveXObject("Shell.Application").ShellExecute("cmd.exe", "/D /Q /C pushd \""+WScript.Arguments(0)+"\" & \""+WScript.Arguments(1)+"\" %sqlinstance% \""+WScript.Arguments(2)+"\"", "", "runas"); >"%TEMP%\addsysadmin{7FC2CAE2-2E9E-47a0-ADE5-C43582022EA8}.js"
+call "%TEMP%\addsysadmin{7FC2CAE2-2E9E-47a0-ADE5-C43582022EA8}.js" "%cd%" %0 "%sqllogin%"
+del "%TEMP%\addsysadmin{7FC2CAE2-2E9E-47a0-ADE5-C43582022EA8}.js"
+REM goto :EOF
+:continue
+rem
+rem determine if the SQL service is running
+rem
+set srvstarted=0
+set srvstate=0
+for /F "usebackq tokens=1,3" %%i in (`sc query %sqlservice%`) do if .%%i == .STATE set srvstate=%%j
+if .%srvstate% == .0 goto queryerror
+rem
+rem if required, stop the SQL service
+rem
+if .%srvstate% == .1 goto startm
+set srvstarted=1
+@echo Stop the '%sqlservice%' service ...
+net stop %sqlservice%
+if errorlevel 1 goto stoperror
+:startm
+rem
+rem start the SQL service with the '-m' option (single admin connection) and wait until its STATE is '4' (STARTED)
+rem also use trace flags as follows:
+rem     3659 - log all errors to errorlog
+rem     4010 - enable shared memory only (lpc:)
+rem     4022 - do not start autoprocs
+rem
+@echo Start the '%sqlservice%' service in maintenance mode ...
+sc start %sqlservice% -m -T3659 -T4010 -T4022 >nul
+if errorlevel 1 goto startmerror
+:checkstate1
+set srvstate=0
+for /F "usebackq tokens=1,3" %%i in (`sc query %sqlservice%`) do if .%%i == .STATE set srvstate=%%j
+if .%srvstate% == .0 goto queryerror
+if .%srvstate% == .1 goto startmerror
+if NOT .%srvstate% == .4 goto checkstate1
+rem
+rem add the specified user to the sysadmin role
+rem access tempdb to avoid a misleading shutdown error
+rem
+@echo Add '%sqllogin%' to the 'sysadmin' role ...
+for /F "usebackq tokens=1,3" %%i in (`sqlcmd -S np:\\.\pipe\SQLLocal\%sqlinstance% -E -Q "create table #foo (bar int); declare @rc int; execute @rc = sp_addsrvrolemember '$(sqllogin)', 'sysadmin'; print 'RETURN_CODE : '+CAST(@rc as char)"`) do if .%%i == .RETURN_CODE set sqlresult=%%j
+rem
+rem stop the SQL service
+rem
+@echo Stop the '%sqlservice%' service ...
+net stop %sqlservice%
+if errorlevel 1 goto stoperror
+if .%srvstarted% == .0 goto exit
+rem
+rem start the SQL service for normal connections
+rem
+net start %sqlservice%
+if errorlevel 1 goto starterror
+goto exit
+rem
+rem handle unexpected errors
+rem
+:existerror
+sc query %sqlservice%
+@echo '%sqlservice%' service is invalid
+goto exit
+:queryerror
+@echo 'sc query %sqlservice%' failed
+goto exit
+:stoperror
+@echo 'net stop %sqlservice%' failed
+goto exit
+:startmerror
+@echo 'sc start %sqlservice% -m' failed
+goto exit
+:starterror
+@echo 'net start %sqlservice%' failed
+goto exit
+:exit
+if .%sqlresult% == .0 (@echo '%sqllogin%' was successfully added to the 'sysadmin' role.) else (@echo '%sqllogin%' was NOT added to the 'sysadmin' role: SQL return code is %sqlresult%.)
+endlocal
+pause
+
diff --git a/Student Files/VendorMaintenance/DataContext.cs b/Student Files/VendorMaintenance/DataContext.cs
new file mode 100644
index 0000000..b236fb4
--- /dev/null
+++ b/Student Files/VendorMaintenance/DataContext.cs	
@@ -0,0 +1,29 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Data.Linq;
+
+namespace VendorMaintenance
+{
+    public static class DataContext
+    {
+        public static PayablesDataContext payables = new PayablesDataContext();
+        public static bool vendorDeleted;
+
+        public static void GetCurrentValues()
+        {
+            foreach (ObjectChangeConflict objConflict
+                    in payables.ChangeConflicts)
+            {
+                if (objConflict.MemberConflicts.Count == 0)
+                    vendorDeleted = true;
+                else
+                {
+                    objConflict.Resolve(RefreshMode.OverwriteCurrentValues);
+                    vendorDeleted = false;
+                }
+            }
+        }
+    }
+}
diff --git a/Student Files/VendorMaintenance/Payables.dbml b/Student Files/VendorMaintenance/Payables.dbml
new file mode 100644
index 0000000..8074564
--- /dev/null
+++ b/Student Files/VendorMaintenance/Payables.dbml	
@@ -0,0 +1,47 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Database Name="Payables" Class="PayablesDataContext" xmlns="http://schemas.microsoft.com/linqtosql/dbml/2007">
+  <Connection Mode="AppSettings" ConnectionString="Data Source=localhost\sqlexpress;Initial Catalog=Payables;Integrated Security=True" SettingsObjectName="VendorMaintenance.Properties.Settings" SettingsPropertyName="PayablesConnectionString" Provider="System.Data.SqlClient" />
+  <Table Name="dbo.Vendors" Member="Vendors">
+    <Type Name="Vendor">
+      <Column Name="VendorID" Type="System.Int32" DbType="Int NOT NULL IDENTITY" IsPrimaryKey="true" IsDbGenerated="true" CanBeNull="false" />
+      <Column Name="Name" Type="System.String" DbType="VarChar(50) NOT NULL" CanBeNull="false" />
+      <Column Name="Address1" Type="System.String" DbType="VarChar(50) NOT NULL" CanBeNull="false" />
+      <Column Name="Address2" Type="System.String" DbType="VarChar(50)" CanBeNull="true" />
+      <Column Name="City" Type="System.String" DbType="VarChar(50) NOT NULL" CanBeNull="false" />
+      <Column Name="State" Type="System.String" DbType="Char(2) NOT NULL" CanBeNull="false" />
+      <Column Name="ZipCode" Type="System.String" DbType="VarChar(20) NOT NULL" CanBeNull="false" />
+      <Column Name="Phone" Type="System.String" DbType="VarChar(10)" CanBeNull="true" />
+      <Column Name="ContactLName" Type="System.String" DbType="VarChar(50)" CanBeNull="true" />
+      <Column Name="ContactFName" Type="System.String" DbType="VarChar(50)" CanBeNull="true" />
+      <Column Name="DefaultTermsID" Type="System.Int32" DbType="Int NOT NULL" CanBeNull="false" />
+      <Column Name="DefaultAccountNo" Type="System.Int32" DbType="Int NOT NULL" CanBeNull="false" />
+      <Association Name="State_Vendor" Member="State1" ThisKey="State" OtherKey="StateCode" Type="State" IsForeignKey="true" />
+      <Association Name="Term_Vendor" Member="Term" ThisKey="DefaultTermsID" OtherKey="TermsID" Type="Term" IsForeignKey="true" />
+      <Association Name="GLAccount_Vendor" Member="GLAccount" ThisKey="DefaultAccountNo" OtherKey="AccountNo" Type="GLAccount" IsForeignKey="true" />
+    </Type>
+  </Table>
+  <Table Name="dbo.States" Member="States">
+    <Type Name="State">
+      <Column Name="StateCode" Type="System.String" DbType="Char(2) NOT NULL" IsPrimaryKey="true" CanBeNull="false" />
+      <Column Name="StateName" Type="System.String" DbType="VarChar(20) NOT NULL" CanBeNull="false" />
+      <Column Name="FirstZipCode" Type="System.Int32" DbType="Int NOT NULL" CanBeNull="false" />
+      <Column Name="LastZipCode" Type="System.Int32" DbType="Int NOT NULL" CanBeNull="false" />
+      <Association Name="State_Vendor" Member="Vendors" ThisKey="StateCode" OtherKey="State" Type="Vendor" />
+    </Type>
+  </Table>
+  <Table Name="dbo.Terms" Member="Terms">
+    <Type Name="Term">
+      <Column Name="TermsID" Type="System.Int32" DbType="Int NOT NULL IDENTITY" IsPrimaryKey="true" IsDbGenerated="true" CanBeNull="false" />
+      <Column Name="Description" Type="System.String" DbType="VarChar(50) NOT NULL" CanBeNull="false" />
+      <Column Name="DueDays" Type="System.Int16" DbType="SmallInt NOT NULL" CanBeNull="false" />
+      <Association Name="Term_Vendor" Member="Vendors" ThisKey="TermsID" OtherKey="DefaultTermsID" Type="Vendor" />
+    </Type>
+  </Table>
+  <Table Name="dbo.GLAccounts" Member="GLAccounts">
+    <Type Name="GLAccount">
+      <Column Name="AccountNo" Type="System.Int32" DbType="Int NOT NULL" IsPrimaryKey="true" CanBeNull="false" />
+      <Column Name="Description" Type="System.String" DbType="VarChar(50) NOT NULL" CanBeNull="false" />
+      <Association Name="GLAccount_Vendor" Member="Vendors" ThisKey="AccountNo" OtherKey="DefaultAccountNo" Type="Vendor" />
+    </Type>
+  </Table>
+</Database>
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/Payables.dbml.layout b/Student Files/VendorMaintenance/Payables.dbml.layout
new file mode 100644
index 0000000..0feee42
--- /dev/null
+++ b/Student Files/VendorMaintenance/Payables.dbml.layout	
@@ -0,0 +1,51 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<ordesignerObjectsDiagram dslVersion="1.0.0.0" absoluteBounds="0, 0, 11, 8.5" name="Payables">
+  <DataContextMoniker Name="/PayablesDataContext" />
+  <nestedChildShapes>
+    <classShape Id="b4f82977-6d55-488d-b3a1-acb215bd71a1" absoluteBounds="3.125, 0.875, 2, 3.1170068359375">
+      <DataClassMoniker Name="/PayablesDataContext/Vendor" />
+      <nestedChildShapes>
+        <elementListCompartment Id="c6167d4b-12be-47e5-8023-6dfd5574587b" absoluteBounds="3.14, 1.335, 1.9700000000000002, 2.5570068359375" name="DataPropertiesCompartment" titleTextColor="Black" itemTextColor="Black" />
+      </nestedChildShapes>
+    </classShape>
+    <classShape Id="1b6a663b-ccee-4b79-b6bd-70c1487b1dd5" absoluteBounds="0.5, 1.125, 2, 1.5785953776041666">
+      <DataClassMoniker Name="/PayablesDataContext/State" />
+      <nestedChildShapes>
+        <elementListCompartment Id="53ac978e-4b01-45a5-acf5-a702efc1728b" absoluteBounds="0.51500000000000012, 1.585, 1.9700000000000002, 1.0185953776041665" name="DataPropertiesCompartment" titleTextColor="Black" itemTextColor="Black" />
+      </nestedChildShapes>
+    </classShape>
+    <associationConnector edgePoints="[(2.5 : 1.91429768880208); (3.125 : 1.91429768880208)]" fixedFrom="Algorithm" fixedTo="Algorithm">
+      <AssociationMoniker Name="/PayablesDataContext/State/State_Vendor" />
+      <nodes>
+        <classShapeMoniker Id="1b6a663b-ccee-4b79-b6bd-70c1487b1dd5" />
+        <classShapeMoniker Id="b4f82977-6d55-488d-b3a1-acb215bd71a1" />
+      </nodes>
+    </associationConnector>
+    <classShape Id="38b7cffa-251c-4731-9682-43ca40279abf" absoluteBounds="5.625, 1.375, 2, 1.3862939453125">
+      <DataClassMoniker Name="/PayablesDataContext/Term" />
+      <nestedChildShapes>
+        <elementListCompartment Id="6e6a7ce5-0c75-4191-84c4-8d81d4eda150" absoluteBounds="5.64, 1.835, 1.9700000000000002, 0.8262939453125" name="DataPropertiesCompartment" titleTextColor="Black" itemTextColor="Black" />
+      </nestedChildShapes>
+    </classShape>
+    <associationConnector edgePoints="[(5.625 : 2.06814697265625); (5.125 : 2.06814697265625)]" fixedFrom="Algorithm" fixedTo="Algorithm">
+      <AssociationMoniker Name="/PayablesDataContext/Term/Term_Vendor" />
+      <nodes>
+        <classShapeMoniker Id="38b7cffa-251c-4731-9682-43ca40279abf" />
+        <classShapeMoniker Id="b4f82977-6d55-488d-b3a1-acb215bd71a1" />
+      </nodes>
+    </associationConnector>
+    <classShape Id="a1e25091-83bd-4d09-a056-9b203daba85a" absoluteBounds="3.125, 4.75, 2, 1.1939925130208327">
+      <DataClassMoniker Name="/PayablesDataContext/GLAccount" />
+      <nestedChildShapes>
+        <elementListCompartment Id="786b738e-7914-4794-87e9-de3d5c69bf0f" absoluteBounds="3.1399999999999997, 5.21, 1.9700000000000002, 0.63399251302083326" name="DataPropertiesCompartment" titleTextColor="Black" itemTextColor="Black" />
+      </nestedChildShapes>
+    </classShape>
+    <associationConnector edgePoints="[(4.125 : 4.75); (4.125 : 3.9920068359375)]" fixedFrom="Algorithm" fixedTo="Algorithm">
+      <AssociationMoniker Name="/PayablesDataContext/GLAccount/GLAccount_Vendor" />
+      <nodes>
+        <classShapeMoniker Id="a1e25091-83bd-4d09-a056-9b203daba85a" />
+        <classShapeMoniker Id="b4f82977-6d55-488d-b3a1-acb215bd71a1" />
+      </nodes>
+    </associationConnector>
+  </nestedChildShapes>
+</ordesignerObjectsDiagram>
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/Payables.designer.cs b/Student Files/VendorMaintenance/Payables.designer.cs
new file mode 100644
index 0000000..b5c9a6e
--- /dev/null
+++ b/Student Files/VendorMaintenance/Payables.designer.cs	
@@ -0,0 +1,973 @@
+﻿#pragma warning disable 1591
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace VendorMaintenance
+{
+	using System.Data.Linq;
+	using System.Data.Linq.Mapping;
+	using System.Data;
+	using System.Collections.Generic;
+	using System.Reflection;
+	using System.Linq;
+	using System.Linq.Expressions;
+	using System.ComponentModel;
+	using System;
+	
+	
+	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Payables")]
+	public partial class PayablesDataContext : System.Data.Linq.DataContext
+	{
+		
+		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
+		
+    #region Extensibility Method Definitions
+    partial void OnCreated();
+    partial void InsertVendor(Vendor instance);
+    partial void UpdateVendor(Vendor instance);
+    partial void DeleteVendor(Vendor instance);
+    partial void InsertState(State instance);
+    partial void UpdateState(State instance);
+    partial void DeleteState(State instance);
+    partial void InsertTerm(Term instance);
+    partial void UpdateTerm(Term instance);
+    partial void DeleteTerm(Term instance);
+    partial void InsertGLAccount(GLAccount instance);
+    partial void UpdateGLAccount(GLAccount instance);
+    partial void DeleteGLAccount(GLAccount instance);
+    #endregion
+		
+		public PayablesDataContext() : 
+				base(global::VendorMaintenance.Properties.Settings.Default.PayablesConnectionString, mappingSource)
+		{
+			OnCreated();
+		}
+		
+		public PayablesDataContext(string connection) : 
+				base(connection, mappingSource)
+		{
+			OnCreated();
+		}
+		
+		public PayablesDataContext(System.Data.IDbConnection connection) : 
+				base(connection, mappingSource)
+		{
+			OnCreated();
+		}
+		
+		public PayablesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
+				base(connection, mappingSource)
+		{
+			OnCreated();
+		}
+		
+		public PayablesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
+				base(connection, mappingSource)
+		{
+			OnCreated();
+		}
+		
+		public System.Data.Linq.Table<Vendor> Vendors
+		{
+			get
+			{
+				return this.GetTable<Vendor>();
+			}
+		}
+		
+		public System.Data.Linq.Table<State> States
+		{
+			get
+			{
+				return this.GetTable<State>();
+			}
+		}
+		
+		public System.Data.Linq.Table<Term> Terms
+		{
+			get
+			{
+				return this.GetTable<Term>();
+			}
+		}
+		
+		public System.Data.Linq.Table<GLAccount> GLAccounts
+		{
+			get
+			{
+				return this.GetTable<GLAccount>();
+			}
+		}
+	}
+	
+	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendors")]
+	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
+	{
+		
+		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
+		
+		private int _VendorID;
+		
+		private string _Name;
+		
+		private string _Address1;
+		
+		private string _Address2;
+		
+		private string _City;
+		
+		private string _State;
+		
+		private string _ZipCode;
+		
+		private string _Phone;
+		
+		private string _ContactLName;
+		
+		private string _ContactFName;
+		
+		private int _DefaultTermsID;
+		
+		private int _DefaultAccountNo;
+		
+		private EntityRef<State> _State1;
+		
+		private EntityRef<Term> _Term;
+		
+		private EntityRef<GLAccount> _GLAccount;
+		
+    #region Extensibility Method Definitions
+    partial void OnLoaded();
+    partial void OnValidate(System.Data.Linq.ChangeAction action);
+    partial void OnCreated();
+    partial void OnVendorIDChanging(int value);
+    partial void OnVendorIDChanged();
+    partial void OnNameChanging(string value);
+    partial void OnNameChanged();
+    partial void OnAddress1Changing(string value);
+    partial void OnAddress1Changed();
+    partial void OnAddress2Changing(string value);
+    partial void OnAddress2Changed();
+    partial void OnCityChanging(string value);
+    partial void OnCityChanged();
+    partial void OnStateChanging(string value);
+    partial void OnStateChanged();
+    partial void OnZipCodeChanging(string value);
+    partial void OnZipCodeChanged();
+    partial void OnPhoneChanging(string value);
+    partial void OnPhoneChanged();
+    partial void OnContactLNameChanging(string value);
+    partial void OnContactLNameChanged();
+    partial void OnContactFNameChanging(string value);
+    partial void OnContactFNameChanged();
+    partial void OnDefaultTermsIDChanging(int value);
+    partial void OnDefaultTermsIDChanged();
+    partial void OnDefaultAccountNoChanging(int value);
+    partial void OnDefaultAccountNoChanged();
+    #endregion
+		
+		public Vendor()
+		{
+			this._State1 = default(EntityRef<State>);
+			this._Term = default(EntityRef<Term>);
+			this._GLAccount = default(EntityRef<GLAccount>);
+			OnCreated();
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
+		public int VendorID
+		{
+			get
+			{
+				return this._VendorID;
+			}
+			set
+			{
+				if ((this._VendorID != value))
+				{
+					this.OnVendorIDChanging(value);
+					this.SendPropertyChanging();
+					this._VendorID = value;
+					this.SendPropertyChanged("VendorID");
+					this.OnVendorIDChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
+		public string Name
+		{
+			get
+			{
+				return this._Name;
+			}
+			set
+			{
+				if ((this._Name != value))
+				{
+					this.OnNameChanging(value);
+					this.SendPropertyChanging();
+					this._Name = value;
+					this.SendPropertyChanged("Name");
+					this.OnNameChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
+		public string Address1
+		{
+			get
+			{
+				return this._Address1;
+			}
+			set
+			{
+				if ((this._Address1 != value))
+				{
+					this.OnAddress1Changing(value);
+					this.SendPropertyChanging();
+					this._Address1 = value;
+					this.SendPropertyChanged("Address1");
+					this.OnAddress1Changed();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(50)")]
+		public string Address2
+		{
+			get
+			{
+				return this._Address2;
+			}
+			set
+			{
+				if ((this._Address2 != value))
+				{
+					this.OnAddress2Changing(value);
+					this.SendPropertyChanging();
+					this._Address2 = value;
+					this.SendPropertyChanged("Address2");
+					this.OnAddress2Changed();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
+		public string City
+		{
+			get
+			{
+				return this._City;
+			}
+			set
+			{
+				if ((this._City != value))
+				{
+					this.OnCityChanging(value);
+					this.SendPropertyChanging();
+					this._City = value;
+					this.SendPropertyChanged("City");
+					this.OnCityChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
+		public string State
+		{
+			get
+			{
+				return this._State;
+			}
+			set
+			{
+				if ((this._State != value))
+				{
+					if (this._State1.HasLoadedOrAssignedValue)
+					{
+						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
+					}
+					this.OnStateChanging(value);
+					this.SendPropertyChanging();
+					this._State = value;
+					this.SendPropertyChanged("State");
+					this.OnStateChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
+		public string ZipCode
+		{
+			get
+			{
+				return this._ZipCode;
+			}
+			set
+			{
+				if ((this._ZipCode != value))
+				{
+					this.OnZipCodeChanging(value);
+					this.SendPropertyChanging();
+					this._ZipCode = value;
+					this.SendPropertyChanged("ZipCode");
+					this.OnZipCodeChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
+		public string Phone
+		{
+			get
+			{
+				return this._Phone;
+			}
+			set
+			{
+				if ((this._Phone != value))
+				{
+					this.OnPhoneChanging(value);
+					this.SendPropertyChanging();
+					this._Phone = value;
+					this.SendPropertyChanged("Phone");
+					this.OnPhoneChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactLName", DbType="VarChar(50)")]
+		public string ContactLName
+		{
+			get
+			{
+				return this._ContactLName;
+			}
+			set
+			{
+				if ((this._ContactLName != value))
+				{
+					this.OnContactLNameChanging(value);
+					this.SendPropertyChanging();
+					this._ContactLName = value;
+					this.SendPropertyChanged("ContactLName");
+					this.OnContactLNameChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFName", DbType="VarChar(50)")]
+		public string ContactFName
+		{
+			get
+			{
+				return this._ContactFName;
+			}
+			set
+			{
+				if ((this._ContactFName != value))
+				{
+					this.OnContactFNameChanging(value);
+					this.SendPropertyChanging();
+					this._ContactFName = value;
+					this.SendPropertyChanged("ContactFName");
+					this.OnContactFNameChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTermsID", DbType="Int NOT NULL")]
+		public int DefaultTermsID
+		{
+			get
+			{
+				return this._DefaultTermsID;
+			}
+			set
+			{
+				if ((this._DefaultTermsID != value))
+				{
+					if (this._Term.HasLoadedOrAssignedValue)
+					{
+						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
+					}
+					this.OnDefaultTermsIDChanging(value);
+					this.SendPropertyChanging();
+					this._DefaultTermsID = value;
+					this.SendPropertyChanged("DefaultTermsID");
+					this.OnDefaultTermsIDChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAccountNo", DbType="Int NOT NULL")]
+		public int DefaultAccountNo
+		{
+			get
+			{
+				return this._DefaultAccountNo;
+			}
+			set
+			{
+				if ((this._DefaultAccountNo != value))
+				{
+					if (this._GLAccount.HasLoadedOrAssignedValue)
+					{
+						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
+					}
+					this.OnDefaultAccountNoChanging(value);
+					this.SendPropertyChanging();
+					this._DefaultAccountNo = value;
+					this.SendPropertyChanged("DefaultAccountNo");
+					this.OnDefaultAccountNoChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Vendor", Storage="_State1", ThisKey="State", OtherKey="StateCode", IsForeignKey=true)]
+		public State State1
+		{
+			get
+			{
+				return this._State1.Entity;
+			}
+			set
+			{
+				State previousValue = this._State1.Entity;
+				if (((previousValue != value) 
+							|| (this._State1.HasLoadedOrAssignedValue == false)))
+				{
+					this.SendPropertyChanging();
+					if ((previousValue != null))
+					{
+						this._State1.Entity = null;
+						previousValue.Vendors.Remove(this);
+					}
+					this._State1.Entity = value;
+					if ((value != null))
+					{
+						value.Vendors.Add(this);
+						this._State = value.StateCode;
+					}
+					else
+					{
+						this._State = default(string);
+					}
+					this.SendPropertyChanged("State1");
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Term_Vendor", Storage="_Term", ThisKey="DefaultTermsID", OtherKey="TermsID", IsForeignKey=true)]
+		public Term Term
+		{
+			get
+			{
+				return this._Term.Entity;
+			}
+			set
+			{
+				Term previousValue = this._Term.Entity;
+				if (((previousValue != value) 
+							|| (this._Term.HasLoadedOrAssignedValue == false)))
+				{
+					this.SendPropertyChanging();
+					if ((previousValue != null))
+					{
+						this._Term.Entity = null;
+						previousValue.Vendors.Remove(this);
+					}
+					this._Term.Entity = value;
+					if ((value != null))
+					{
+						value.Vendors.Add(this);
+						this._DefaultTermsID = value.TermsID;
+					}
+					else
+					{
+						this._DefaultTermsID = default(int);
+					}
+					this.SendPropertyChanged("Term");
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GLAccount_Vendor", Storage="_GLAccount", ThisKey="DefaultAccountNo", OtherKey="AccountNo", IsForeignKey=true)]
+		public GLAccount GLAccount
+		{
+			get
+			{
+				return this._GLAccount.Entity;
+			}
+			set
+			{
+				GLAccount previousValue = this._GLAccount.Entity;
+				if (((previousValue != value) 
+							|| (this._GLAccount.HasLoadedOrAssignedValue == false)))
+				{
+					this.SendPropertyChanging();
+					if ((previousValue != null))
+					{
+						this._GLAccount.Entity = null;
+						previousValue.Vendors.Remove(this);
+					}
+					this._GLAccount.Entity = value;
+					if ((value != null))
+					{
+						value.Vendors.Add(this);
+						this._DefaultAccountNo = value.AccountNo;
+					}
+					else
+					{
+						this._DefaultAccountNo = default(int);
+					}
+					this.SendPropertyChanged("GLAccount");
+				}
+			}
+		}
+		
+		public event PropertyChangingEventHandler PropertyChanging;
+		
+		public event PropertyChangedEventHandler PropertyChanged;
+		
+		protected virtual void SendPropertyChanging()
+		{
+			if ((this.PropertyChanging != null))
+			{
+				this.PropertyChanging(this, emptyChangingEventArgs);
+			}
+		}
+		
+		protected virtual void SendPropertyChanged(String propertyName)
+		{
+			if ((this.PropertyChanged != null))
+			{
+				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
+			}
+		}
+	}
+	
+	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
+	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
+	{
+		
+		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
+		
+		private string _StateCode;
+		
+		private string _StateName;
+		
+		private int _FirstZipCode;
+		
+		private int _LastZipCode;
+		
+		private EntitySet<Vendor> _Vendors;
+		
+    #region Extensibility Method Definitions
+    partial void OnLoaded();
+    partial void OnValidate(System.Data.Linq.ChangeAction action);
+    partial void OnCreated();
+    partial void OnStateCodeChanging(string value);
+    partial void OnStateCodeChanged();
+    partial void OnStateNameChanging(string value);
+    partial void OnStateNameChanged();
+    partial void OnFirstZipCodeChanging(int value);
+    partial void OnFirstZipCodeChanged();
+    partial void OnLastZipCodeChanging(int value);
+    partial void OnLastZipCodeChanged();
+    #endregion
+		
+		public State()
+		{
+			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
+			OnCreated();
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
+		public string StateCode
+		{
+			get
+			{
+				return this._StateCode;
+			}
+			set
+			{
+				if ((this._StateCode != value))
+				{
+					this.OnStateCodeChanging(value);
+					this.SendPropertyChanging();
+					this._StateCode = value;
+					this.SendPropertyChanged("StateCode");
+					this.OnStateCodeChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
+		public string StateName
+		{
+			get
+			{
+				return this._StateName;
+			}
+			set
+			{
+				if ((this._StateName != value))
+				{
+					this.OnStateNameChanging(value);
+					this.SendPropertyChanging();
+					this._StateName = value;
+					this.SendPropertyChanged("StateName");
+					this.OnStateNameChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstZipCode", DbType="Int NOT NULL")]
+		public int FirstZipCode
+		{
+			get
+			{
+				return this._FirstZipCode;
+			}
+			set
+			{
+				if ((this._FirstZipCode != value))
+				{
+					this.OnFirstZipCodeChanging(value);
+					this.SendPropertyChanging();
+					this._FirstZipCode = value;
+					this.SendPropertyChanged("FirstZipCode");
+					this.OnFirstZipCodeChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastZipCode", DbType="Int NOT NULL")]
+		public int LastZipCode
+		{
+			get
+			{
+				return this._LastZipCode;
+			}
+			set
+			{
+				if ((this._LastZipCode != value))
+				{
+					this.OnLastZipCodeChanging(value);
+					this.SendPropertyChanging();
+					this._LastZipCode = value;
+					this.SendPropertyChanged("LastZipCode");
+					this.OnLastZipCodeChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Vendor", Storage="_Vendors", ThisKey="StateCode", OtherKey="State")]
+		public EntitySet<Vendor> Vendors
+		{
+			get
+			{
+				return this._Vendors;
+			}
+			set
+			{
+				this._Vendors.Assign(value);
+			}
+		}
+		
+		public event PropertyChangingEventHandler PropertyChanging;
+		
+		public event PropertyChangedEventHandler PropertyChanged;
+		
+		protected virtual void SendPropertyChanging()
+		{
+			if ((this.PropertyChanging != null))
+			{
+				this.PropertyChanging(this, emptyChangingEventArgs);
+			}
+		}
+		
+		protected virtual void SendPropertyChanged(String propertyName)
+		{
+			if ((this.PropertyChanged != null))
+			{
+				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
+			}
+		}
+		
+		private void attach_Vendors(Vendor entity)
+		{
+			this.SendPropertyChanging();
+			entity.State1 = this;
+		}
+		
+		private void detach_Vendors(Vendor entity)
+		{
+			this.SendPropertyChanging();
+			entity.State1 = null;
+		}
+	}
+	
+	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terms")]
+	public partial class Term : INotifyPropertyChanging, INotifyPropertyChanged
+	{
+		
+		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
+		
+		private int _TermsID;
+		
+		private string _Description;
+		
+		private short _DueDays;
+		
+		private EntitySet<Vendor> _Vendors;
+		
+    #region Extensibility Method Definitions
+    partial void OnLoaded();
+    partial void OnValidate(System.Data.Linq.ChangeAction action);
+    partial void OnCreated();
+    partial void OnTermsIDChanging(int value);
+    partial void OnTermsIDChanged();
+    partial void OnDescriptionChanging(string value);
+    partial void OnDescriptionChanged();
+    partial void OnDueDaysChanging(short value);
+    partial void OnDueDaysChanged();
+    #endregion
+		
+		public Term()
+		{
+			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
+			OnCreated();
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
+		public int TermsID
+		{
+			get
+			{
+				return this._TermsID;
+			}
+			set
+			{
+				if ((this._TermsID != value))
+				{
+					this.OnTermsIDChanging(value);
+					this.SendPropertyChanging();
+					this._TermsID = value;
+					this.SendPropertyChanged("TermsID");
+					this.OnTermsIDChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
+		public string Description
+		{
+			get
+			{
+				return this._Description;
+			}
+			set
+			{
+				if ((this._Description != value))
+				{
+					this.OnDescriptionChanging(value);
+					this.SendPropertyChanging();
+					this._Description = value;
+					this.SendPropertyChanged("Description");
+					this.OnDescriptionChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDays", DbType="SmallInt NOT NULL")]
+		public short DueDays
+		{
+			get
+			{
+				return this._DueDays;
+			}
+			set
+			{
+				if ((this._DueDays != value))
+				{
+					this.OnDueDaysChanging(value);
+					this.SendPropertyChanging();
+					this._DueDays = value;
+					this.SendPropertyChanged("DueDays");
+					this.OnDueDaysChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Term_Vendor", Storage="_Vendors", ThisKey="TermsID", OtherKey="DefaultTermsID")]
+		public EntitySet<Vendor> Vendors
+		{
+			get
+			{
+				return this._Vendors;
+			}
+			set
+			{
+				this._Vendors.Assign(value);
+			}
+		}
+		
+		public event PropertyChangingEventHandler PropertyChanging;
+		
+		public event PropertyChangedEventHandler PropertyChanged;
+		
+		protected virtual void SendPropertyChanging()
+		{
+			if ((this.PropertyChanging != null))
+			{
+				this.PropertyChanging(this, emptyChangingEventArgs);
+			}
+		}
+		
+		protected virtual void SendPropertyChanged(String propertyName)
+		{
+			if ((this.PropertyChanged != null))
+			{
+				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
+			}
+		}
+		
+		private void attach_Vendors(Vendor entity)
+		{
+			this.SendPropertyChanging();
+			entity.Term = this;
+		}
+		
+		private void detach_Vendors(Vendor entity)
+		{
+			this.SendPropertyChanging();
+			entity.Term = null;
+		}
+	}
+	
+	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GLAccounts")]
+	public partial class GLAccount : INotifyPropertyChanging, INotifyPropertyChanged
+	{
+		
+		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
+		
+		private int _AccountNo;
+		
+		private string _Description;
+		
+		private EntitySet<Vendor> _Vendors;
+		
+    #region Extensibility Method Definitions
+    partial void OnLoaded();
+    partial void OnValidate(System.Data.Linq.ChangeAction action);
+    partial void OnCreated();
+    partial void OnAccountNoChanging(int value);
+    partial void OnAccountNoChanged();
+    partial void OnDescriptionChanging(string value);
+    partial void OnDescriptionChanged();
+    #endregion
+		
+		public GLAccount()
+		{
+			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
+			OnCreated();
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
+		public int AccountNo
+		{
+			get
+			{
+				return this._AccountNo;
+			}
+			set
+			{
+				if ((this._AccountNo != value))
+				{
+					this.OnAccountNoChanging(value);
+					this.SendPropertyChanging();
+					this._AccountNo = value;
+					this.SendPropertyChanged("AccountNo");
+					this.OnAccountNoChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
+		public string Description
+		{
+			get
+			{
+				return this._Description;
+			}
+			set
+			{
+				if ((this._Description != value))
+				{
+					this.OnDescriptionChanging(value);
+					this.SendPropertyChanging();
+					this._Description = value;
+					this.SendPropertyChanged("Description");
+					this.OnDescriptionChanged();
+				}
+			}
+		}
+		
+		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GLAccount_Vendor", Storage="_Vendors", ThisKey="AccountNo", OtherKey="DefaultAccountNo")]
+		public EntitySet<Vendor> Vendors
+		{
+			get
+			{
+				return this._Vendors;
+			}
+			set
+			{
+				this._Vendors.Assign(value);
+			}
+		}
+		
+		public event PropertyChangingEventHandler PropertyChanging;
+		
+		public event PropertyChangedEventHandler PropertyChanged;
+		
+		protected virtual void SendPropertyChanging()
+		{
+			if ((this.PropertyChanging != null))
+			{
+				this.PropertyChanging(this, emptyChangingEventArgs);
+			}
+		}
+		
+		protected virtual void SendPropertyChanged(String propertyName)
+		{
+			if ((this.PropertyChanged != null))
+			{
+				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
+			}
+		}
+		
+		private void attach_Vendors(Vendor entity)
+		{
+			this.SendPropertyChanging();
+			entity.GLAccount = this;
+		}
+		
+		private void detach_Vendors(Vendor entity)
+		{
+			this.SendPropertyChanging();
+			entity.GLAccount = null;
+		}
+	}
+}
+#pragma warning restore 1591
diff --git a/Student Files/VendorMaintenance/Program.cs b/Student Files/VendorMaintenance/Program.cs
new file mode 100644
index 0000000..727a00f
--- /dev/null
+++ b/Student Files/VendorMaintenance/Program.cs	
@@ -0,0 +1,21 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Windows.Forms;
+
+namespace VendorMaintenance
+{
+    static class Program
+    {
+        /// <summary>
+        /// The main entry point for the application.
+        /// </summary>
+        [STAThread]
+        static void Main()
+        {
+            Application.EnableVisualStyles();
+            Application.SetCompatibleTextRenderingDefault(false);
+            Application.Run(new frmVendorMaintenance());
+        }
+    }
+}
diff --git a/Student Files/VendorMaintenance/Properties/AssemblyInfo.cs b/Student Files/VendorMaintenance/Properties/AssemblyInfo.cs
new file mode 100644
index 0000000..5c9bb21
--- /dev/null
+++ b/Student Files/VendorMaintenance/Properties/AssemblyInfo.cs	
@@ -0,0 +1,36 @@
+﻿using System.Reflection;
+using System.Runtime.CompilerServices;
+using System.Runtime.InteropServices;
+
+// General Information about an assembly is controlled through the following 
+// set of attributes. Change these attribute values to modify the information
+// associated with an assembly.
+[assembly: AssemblyTitle("VendorMaintenance")]
+[assembly: AssemblyDescription("")]
+[assembly: AssemblyConfiguration("")]
+[assembly: AssemblyCompany("Mike Murach & Associates Inc.")]
+[assembly: AssemblyProduct("VendorMaintenance")]
+[assembly: AssemblyCopyright("Copyright © Mike Murach & Associates Inc. 2009")]
+[assembly: AssemblyTrademark("")]
+[assembly: AssemblyCulture("")]
+
+// Setting ComVisible to false makes the types in this assembly not visible 
+// to COM components.  If you need to access a type in this assembly from 
+// COM, set the ComVisible attribute to true on that type.
+[assembly: ComVisible(false)]
+
+// The following GUID is for the ID of the typelib if this project is exposed to COM
+[assembly: Guid("467c554a-56ec-4a0f-99bb-05c172490534")]
+
+// Version information for an assembly consists of the following four values:
+//
+//      Major Version
+//      Minor Version 
+//      Build Number
+//      Revision
+//
+// You can specify all the values or you can default the Build and Revision Numbers 
+// by using the '*' as shown below:
+// [assembly: AssemblyVersion("1.0.*")]
+[assembly: AssemblyVersion("1.0.0.0")]
+[assembly: AssemblyFileVersion("1.0.0.0")]
diff --git a/Student Files/VendorMaintenance/Properties/Resources.Designer.cs b/Student Files/VendorMaintenance/Properties/Resources.Designer.cs
new file mode 100644
index 0000000..9fc7222
--- /dev/null
+++ b/Student Files/VendorMaintenance/Properties/Resources.Designer.cs	
@@ -0,0 +1,63 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace VendorMaintenance.Properties {
+    using System;
+    
+    
+    /// <summary>
+    ///   A strongly-typed resource class, for looking up localized strings, etc.
+    /// </summary>
+    // This class was auto-generated by the StronglyTypedResourceBuilder
+    // class via a tool like ResGen or Visual Studio.
+    // To add or remove a member, edit your .ResX file then rerun ResGen
+    // with the /str option, or rebuild your VS project.
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
+    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    internal class Resources {
+        
+        private static global::System.Resources.ResourceManager resourceMan;
+        
+        private static global::System.Globalization.CultureInfo resourceCulture;
+        
+        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        internal Resources() {
+        }
+        
+        /// <summary>
+        ///   Returns the cached ResourceManager instance used by this class.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Resources.ResourceManager ResourceManager {
+            get {
+                if (object.ReferenceEquals(resourceMan, null)) {
+                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VendorMaintenance.Properties.Resources", typeof(Resources).Assembly);
+                    resourceMan = temp;
+                }
+                return resourceMan;
+            }
+        }
+        
+        /// <summary>
+        ///   Overrides the current thread's CurrentUICulture property for all
+        ///   resource lookups using this strongly typed resource class.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Globalization.CultureInfo Culture {
+            get {
+                return resourceCulture;
+            }
+            set {
+                resourceCulture = value;
+            }
+        }
+    }
+}
diff --git a/Student Files/VendorMaintenance/Properties/Resources.resx b/Student Files/VendorMaintenance/Properties/Resources.resx
new file mode 100644
index 0000000..af7dbeb
--- /dev/null
+++ b/Student Files/VendorMaintenance/Properties/Resources.resx	
@@ -0,0 +1,117 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/Properties/Settings.Designer.cs b/Student Files/VendorMaintenance/Properties/Settings.Designer.cs
new file mode 100644
index 0000000..951bb9f
--- /dev/null
+++ b/Student Files/VendorMaintenance/Properties/Settings.Designer.cs	
@@ -0,0 +1,37 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace VendorMaintenance.Properties {
+    
+    
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
+    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
+        
+        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
+        
+        public static Settings Default {
+            get {
+                return defaultInstance;
+            }
+        }
+        
+        [global::System.Configuration.ApplicationScopedSettingAttribute()]
+        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
+        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
+        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=localhost\\sqlexpress;Initial Catalog=Payables;Integrated Security=Tru" +
+            "e")]
+        public string PayablesConnectionString {
+            get {
+                return ((string)(this["PayablesConnectionString"]));
+            }
+        }
+    }
+}
diff --git a/Student Files/VendorMaintenance/Properties/Settings.settings b/Student Files/VendorMaintenance/Properties/Settings.settings
new file mode 100644
index 0000000..89d3713
--- /dev/null
+++ b/Student Files/VendorMaintenance/Properties/Settings.settings	
@@ -0,0 +1,14 @@
+﻿<?xml version='1.0' encoding='utf-8'?>
+<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)" GeneratedClassNamespace="VendorMaintenance.Properties" GeneratedClassName="Settings">
+  <Profiles />
+  <Settings>
+    <Setting Name="PayablesConnectionString" Type="(Connection string)" Scope="Application">
+      <DesignTimeValue Profile="(Default)">&lt;?xml version="1.0" encoding="utf-16"?&gt;
+&lt;SerializableConnectionString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
+  &lt;ConnectionString&gt;Data Source=localhost\sqlexpress;Initial Catalog=Payables;Integrated Security=True&lt;/ConnectionString&gt;
+  &lt;ProviderName&gt;System.Data.SqlClient&lt;/ProviderName&gt;
+&lt;/SerializableConnectionString&gt;</DesignTimeValue>
+      <Value Profile="(Default)">Data Source=localhost\sqlexpress;Initial Catalog=Payables;Integrated Security=True</Value>
+    </Setting>
+  </Settings>
+</SettingsFile>
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/Validator.cs b/Student Files/VendorMaintenance/Validator.cs
new file mode 100644
index 0000000..d02432d
--- /dev/null
+++ b/Student Files/VendorMaintenance/Validator.cs	
@@ -0,0 +1,122 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Windows.Forms;
+
+namespace VendorMaintenance
+{
+    class Validator
+    {
+        private static string title = "Entry Error";
+
+        public static string Title
+        {
+            get
+            {
+                return title;
+            }
+            set
+            {
+                title = value;
+            }
+        }
+
+        public static bool IsPresent(Control control)
+        {
+            if (control.GetType().ToString() == "System.Windows.Forms.TextBox")
+            {
+                TextBox textBox = (TextBox)control;
+                if (textBox.Text == "")
+                {
+                    MessageBox.Show(textBox.Tag.ToString() + " is a required field.", Title);
+                    textBox.Focus();
+                    return false;
+                }
+                else
+                {
+                    return true;
+                }
+            }
+            else if (control.GetType().ToString() == "System.Windows.Forms.ComboBox")
+            {
+                ComboBox comboBox = (ComboBox)control;
+                if (comboBox.SelectedIndex == -1)
+                {
+                    MessageBox.Show(comboBox.Tag.ToString() + " is a required field.", Title);
+                    comboBox.Focus();
+                    return false;
+                }
+                else
+                {
+                    return true;
+                }
+            }
+            return true;
+        }
+
+        public static bool IsDecimal(TextBox textBox)
+        {
+            try
+            {
+                Convert.ToDecimal(textBox.Text);
+                return true;
+            }
+            catch (FormatException)
+            {
+                MessageBox.Show(textBox.Tag.ToString() + " must be a decimal value.", Title);
+                textBox.Focus();
+                return false;
+            }
+        }
+
+        public static bool IsInt32(TextBox textBox)
+        {
+            try
+            {
+                Convert.ToInt32(textBox.Text);
+                return true;
+            }
+            catch (FormatException)
+            {
+                MessageBox.Show(textBox.Tag.ToString() + " must be an integer value.", Title);
+                textBox.Focus();
+                return false;
+            }
+        }
+
+        public static bool IsStateZipCode(TextBox textBox,
+            int firstZip, int lastZip)
+        {
+            int zipCode = Convert.ToInt32(textBox.Text);
+            if (zipCode <= firstZip || zipCode >= lastZip)
+            {
+                MessageBox.Show(textBox.Tag.ToString() + " must be within this range: " +
+                    firstZip + " to " + lastZip + ".", Title);
+                textBox.Focus();
+                return false;
+            }
+            else
+            {
+                return true;
+            }
+        }
+
+        public static bool IsPhoneNumber(TextBox textBox)
+        {
+            string phoneChars = textBox.Text.Replace(".", "");
+            try
+            {
+                Convert.ToInt64(phoneChars);
+                return true;
+            }
+            catch (FormatException)
+            {
+                MessageBox.Show(textBox.Tag.ToString() + " must be in this format: " +
+                    "999.999.9999.", Title);
+                textBox.Focus();
+                return false;
+            }
+        }
+    }
+}
diff --git a/Student Files/VendorMaintenance/VendorMaintenance.csproj b/Student Files/VendorMaintenance/VendorMaintenance.csproj
new file mode 100644
index 0000000..f9d7590
--- /dev/null
+++ b/Student Files/VendorMaintenance/VendorMaintenance.csproj	
@@ -0,0 +1,126 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProductVersion>9.0.21022</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{F88A63D5-6440-4247-9044-48C14B371657}</ProjectGuid>
+    <OutputType>WinExe</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>VendorMaintenance</RootNamespace>
+    <AssemblyName>VendorMaintenance</AssemblyName>
+    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
+    <FileAlignment>512</FileAlignment>
+    <FileUpgradeFlags>
+    </FileUpgradeFlags>
+    <OldToolsVersion>3.5</OldToolsVersion>
+    <UpgradeBackupLocation />
+    <TargetFrameworkProfile />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
+    <Prefer32Bit>false</Prefer32Bit>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
+    <Prefer32Bit>false</Prefer32Bit>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data.Linq">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Xml.Linq">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data.DataSetExtensions">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data" />
+    <Reference Include="System.Deployment" />
+    <Reference Include="System.Drawing" />
+    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="DataContext.cs" />
+    <Compile Include="frmAddModifyVendor.cs">
+      <SubType>Form</SubType>
+    </Compile>
+    <Compile Include="frmAddModifyVendor.Designer.cs">
+      <DependentUpon>frmAddModifyVendor.cs</DependentUpon>
+    </Compile>
+    <Compile Include="frmVendorMaintenance.cs">
+      <SubType>Form</SubType>
+    </Compile>
+    <Compile Include="frmVendorMaintenance.Designer.cs">
+      <DependentUpon>frmVendorMaintenance.cs</DependentUpon>
+    </Compile>
+    <Compile Include="Payables.designer.cs">
+      <AutoGen>True</AutoGen>
+      <DesignTime>True</DesignTime>
+      <DependentUpon>Payables.dbml</DependentUpon>
+    </Compile>
+    <Compile Include="Program.cs" />
+    <Compile Include="Properties\AssemblyInfo.cs" />
+    <None Include="app.config">
+      <SubType>Designer</SubType>
+    </None>
+    <None Include="Payables.dbml.layout">
+      <DependentUpon>Payables.dbml</DependentUpon>
+    </None>
+    <EmbeddedResource Include="Properties\Resources.resx">
+      <Generator>ResXFileCodeGenerator</Generator>
+      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
+      <SubType>Designer</SubType>
+    </EmbeddedResource>
+    <Compile Include="Properties\Resources.Designer.cs">
+      <AutoGen>True</AutoGen>
+      <DependentUpon>Resources.resx</DependentUpon>
+      <DesignTime>True</DesignTime>
+    </Compile>
+    <None Include="Payables.dbml">
+      <Generator>MSLinqToSQLGenerator</Generator>
+      <LastGenOutput>Payables.designer.cs</LastGenOutput>
+      <SubType>Designer</SubType>
+    </None>
+    <None Include="Properties\Settings.settings">
+      <Generator>SettingsSingleFileGenerator</Generator>
+      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
+    </None>
+    <Compile Include="Properties\Settings.Designer.cs">
+      <AutoGen>True</AutoGen>
+      <DependentUpon>Settings.settings</DependentUpon>
+      <DesignTimeSharedInput>True</DesignTimeSharedInput>
+    </Compile>
+    <Compile Include="Validator.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <Service Include="{3259AA49-8AA1-44D3-9025-A0B520596A8C}" />
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+</Project>
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/VendorMaintenance.sln b/Student Files/VendorMaintenance/VendorMaintenance.sln
new file mode 100644
index 0000000..d7e4736
--- /dev/null
+++ b/Student Files/VendorMaintenance/VendorMaintenance.sln	
@@ -0,0 +1,20 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 11.00
+# Visual Studio 2010
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "VendorMaintenance", "VendorMaintenance.csproj", "{F88A63D5-6440-4247-9044-48C14B371657}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Any CPU = Debug|Any CPU
+		Release|Any CPU = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{F88A63D5-6440-4247-9044-48C14B371657}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{F88A63D5-6440-4247-9044-48C14B371657}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{F88A63D5-6440-4247-9044-48C14B371657}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{F88A63D5-6440-4247-9044-48C14B371657}.Release|Any CPU.Build.0 = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff --git a/Student Files/VendorMaintenance/VendorMaintenance.sln.recipe b/Student Files/VendorMaintenance/VendorMaintenance.sln.recipe
new file mode 100644
index 0000000..f3f33b6
--- /dev/null
+++ b/Student Files/VendorMaintenance/VendorMaintenance.sln.recipe	
@@ -0,0 +1,5 @@
+<recipe>
+  <selector selectorClass="csUnit.Core.CategorySelector">
+    <categorySelector />
+  </selector>
+</recipe>
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/app.config b/Student Files/VendorMaintenance/app.config
new file mode 100644
index 0000000..78c4854
--- /dev/null
+++ b/Student Files/VendorMaintenance/app.config	
@@ -0,0 +1,8 @@
+<?xml version="1.0"?>
+<configuration>
+    <configSections>
+    </configSections>
+    <connectionStrings>
+        <add name="VendorMaintenance.Properties.Settings.PayablesConnectionString" connectionString="Data Source=localhost\sqlexpress;Initial Catalog=Payables;Integrated Security=True" providerName="System.Data.SqlClient"/>
+    </connectionStrings>
+<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/></startup></configuration>
diff --git a/Student Files/VendorMaintenance/frmAddModifyVendor.Designer.cs b/Student Files/VendorMaintenance/frmAddModifyVendor.Designer.cs
new file mode 100644
index 0000000..cbc03f5
--- /dev/null
+++ b/Student Files/VendorMaintenance/frmAddModifyVendor.Designer.cs	
@@ -0,0 +1,391 @@
+﻿namespace VendorMaintenance
+{
+    partial class frmAddModifyVendor
+    {
+        /// <summary>
+        /// Required designer variable.
+        /// </summary>
+        private System.ComponentModel.IContainer components = null;
+
+        /// <summary>
+        /// Clean up any resources being used.
+        /// </summary>
+        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
+        protected override void Dispose(bool disposing)
+        {
+            if (disposing && (components != null))
+            {
+                components.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+
+        #region Windows Form Designer generated code
+
+        /// <summary>
+        /// Required method for Designer support - do not modify
+        /// the contents of this method with the code editor.
+        /// </summary>
+        private void InitializeComponent()
+        {
+            this.btnCancel = new System.Windows.Forms.Button();
+            this.btnAccept = new System.Windows.Forms.Button();
+            this.GroupBox2 = new System.Windows.Forms.GroupBox();
+            this.cboAccounts = new System.Windows.Forms.ComboBox();
+            this.Label10 = new System.Windows.Forms.Label();
+            this.cboTerms = new System.Windows.Forms.ComboBox();
+            this.Label1 = new System.Windows.Forms.Label();
+            this.GroupBox1 = new System.Windows.Forms.GroupBox();
+            this.txtLastName = new System.Windows.Forms.TextBox();
+            this.Label9 = new System.Windows.Forms.Label();
+            this.txtFirstName = new System.Windows.Forms.TextBox();
+            this.Label8 = new System.Windows.Forms.Label();
+            this.txtPhone = new System.Windows.Forms.TextBox();
+            this.Label4 = new System.Windows.Forms.Label();
+            this.txtZipCode = new System.Windows.Forms.TextBox();
+            this.Label7 = new System.Windows.Forms.Label();
+            this.cboStates = new System.Windows.Forms.ComboBox();
+            this.Label6 = new System.Windows.Forms.Label();
+            this.txtCity = new System.Windows.Forms.TextBox();
+            this.Label5 = new System.Windows.Forms.Label();
+            this.txtAddress2 = new System.Windows.Forms.TextBox();
+            this.txtAddress1 = new System.Windows.Forms.TextBox();
+            this.Label3 = new System.Windows.Forms.Label();
+            this.txtName = new System.Windows.Forms.TextBox();
+            this.Label2 = new System.Windows.Forms.Label();
+            this.GroupBox2.SuspendLayout();
+            this.GroupBox1.SuspendLayout();
+            this.SuspendLayout();
+            // 
+            // btnCancel
+            // 
+            this.btnCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel;
+            this.btnCancel.Location = new System.Drawing.Point(360, 471);
+            this.btnCancel.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnCancel.Name = "btnCancel";
+            this.btnCancel.Size = new System.Drawing.Size(100, 28);
+            this.btnCancel.TabIndex = 29;
+            this.btnCancel.Text = "Cancel";
+            this.btnCancel.UseVisualStyleBackColor = true;
+            // 
+            // btnAccept
+            // 
+            this.btnAccept.Location = new System.Drawing.Point(20, 471);
+            this.btnAccept.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnAccept.Name = "btnAccept";
+            this.btnAccept.Size = new System.Drawing.Size(100, 28);
+            this.btnAccept.TabIndex = 28;
+            this.btnAccept.Text = "Accept";
+            this.btnAccept.UseVisualStyleBackColor = true;
+            this.btnAccept.Click += new System.EventHandler(this.btnAccept_Click);
+            // 
+            // GroupBox2
+            // 
+            this.GroupBox2.Controls.Add(this.cboAccounts);
+            this.GroupBox2.Controls.Add(this.Label10);
+            this.GroupBox2.Controls.Add(this.cboTerms);
+            this.GroupBox2.Controls.Add(this.Label1);
+            this.GroupBox2.Location = new System.Drawing.Point(20, 190);
+            this.GroupBox2.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.GroupBox2.Name = "GroupBox2";
+            this.GroupBox2.Padding = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.GroupBox2.Size = new System.Drawing.Size(441, 100);
+            this.GroupBox2.TabIndex = 26;
+            this.GroupBox2.TabStop = false;
+            this.GroupBox2.Text = "Defaults";
+            // 
+            // cboAccounts
+            // 
+            this.cboAccounts.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
+            this.cboAccounts.FormattingEnabled = true;
+            this.cboAccounts.Location = new System.Drawing.Point(83, 57);
+            this.cboAccounts.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.cboAccounts.Name = "cboAccounts";
+            this.cboAccounts.Size = new System.Drawing.Size(211, 24);
+            this.cboAccounts.TabIndex = 3;
+            this.cboAccounts.Tag = "Account";
+            // 
+            // Label10
+            // 
+            this.Label10.AutoSize = true;
+            this.Label10.Location = new System.Drawing.Point(8, 60);
+            this.Label10.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label10.Name = "Label10";
+            this.Label10.Size = new System.Drawing.Size(63, 17);
+            this.Label10.TabIndex = 2;
+            this.Label10.Text = "Account:";
+            // 
+            // cboTerms
+            // 
+            this.cboTerms.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
+            this.cboTerms.FormattingEnabled = true;
+            this.cboTerms.Location = new System.Drawing.Point(83, 23);
+            this.cboTerms.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.cboTerms.Name = "cboTerms";
+            this.cboTerms.Size = new System.Drawing.Size(211, 24);
+            this.cboTerms.TabIndex = 1;
+            this.cboTerms.Tag = "Terms";
+            // 
+            // Label1
+            // 
+            this.Label1.AutoSize = true;
+            this.Label1.Location = new System.Drawing.Point(8, 28);
+            this.Label1.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label1.Name = "Label1";
+            this.Label1.Size = new System.Drawing.Size(52, 17);
+            this.Label1.TabIndex = 0;
+            this.Label1.Text = "Terms:";
+            // 
+            // GroupBox1
+            // 
+            this.GroupBox1.Controls.Add(this.txtLastName);
+            this.GroupBox1.Controls.Add(this.Label9);
+            this.GroupBox1.Controls.Add(this.txtFirstName);
+            this.GroupBox1.Controls.Add(this.Label8);
+            this.GroupBox1.Controls.Add(this.txtPhone);
+            this.GroupBox1.Controls.Add(this.Label4);
+            this.GroupBox1.Location = new System.Drawing.Point(20, 308);
+            this.GroupBox1.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.GroupBox1.Name = "GroupBox1";
+            this.GroupBox1.Padding = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.GroupBox1.Size = new System.Drawing.Size(441, 133);
+            this.GroupBox1.TabIndex = 27;
+            this.GroupBox1.TabStop = false;
+            this.GroupBox1.Text = "Contact information:";
+            // 
+            // txtLastName
+            // 
+            this.txtLastName.Location = new System.Drawing.Point(93, 89);
+            this.txtLastName.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtLastName.MaxLength = 50;
+            this.txtLastName.Name = "txtLastName";
+            this.txtLastName.Size = new System.Drawing.Size(265, 22);
+            this.txtLastName.TabIndex = 5;
+            // 
+            // Label9
+            // 
+            this.Label9.AutoSize = true;
+            this.Label9.Location = new System.Drawing.Point(11, 92);
+            this.Label9.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label9.Name = "Label9";
+            this.Label9.Size = new System.Drawing.Size(78, 17);
+            this.Label9.TabIndex = 4;
+            this.Label9.Text = "Last name:";
+            // 
+            // txtFirstName
+            // 
+            this.txtFirstName.Location = new System.Drawing.Point(93, 57);
+            this.txtFirstName.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtFirstName.MaxLength = 50;
+            this.txtFirstName.Name = "txtFirstName";
+            this.txtFirstName.Size = new System.Drawing.Size(265, 22);
+            this.txtFirstName.TabIndex = 3;
+            // 
+            // Label8
+            // 
+            this.Label8.AutoSize = true;
+            this.Label8.Location = new System.Drawing.Point(8, 60);
+            this.Label8.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label8.Name = "Label8";
+            this.Label8.Size = new System.Drawing.Size(78, 17);
+            this.Label8.TabIndex = 2;
+            this.Label8.Text = "First name:";
+            // 
+            // txtPhone
+            // 
+            this.txtPhone.Location = new System.Drawing.Point(93, 25);
+            this.txtPhone.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtPhone.Name = "txtPhone";
+            this.txtPhone.Size = new System.Drawing.Size(159, 22);
+            this.txtPhone.TabIndex = 1;
+            this.txtPhone.Tag = "Phone";
+            // 
+            // Label4
+            // 
+            this.Label4.AutoSize = true;
+            this.Label4.Location = new System.Drawing.Point(11, 28);
+            this.Label4.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label4.Name = "Label4";
+            this.Label4.Size = new System.Drawing.Size(53, 17);
+            this.Label4.TabIndex = 0;
+            this.Label4.Text = "Phone:";
+            // 
+            // txtZipCode
+            // 
+            this.txtZipCode.Location = new System.Drawing.Point(355, 143);
+            this.txtZipCode.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtZipCode.MaxLength = 20;
+            this.txtZipCode.Name = "txtZipCode";
+            this.txtZipCode.Size = new System.Drawing.Size(105, 22);
+            this.txtZipCode.TabIndex = 25;
+            this.txtZipCode.Tag = "Zip code";
+            // 
+            // Label7
+            // 
+            this.Label7.AutoSize = true;
+            this.Label7.Location = new System.Drawing.Point(277, 146);
+            this.Label7.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label7.Name = "Label7";
+            this.Label7.Size = new System.Drawing.Size(67, 17);
+            this.Label7.TabIndex = 24;
+            this.Label7.Text = "Zip code:";
+            // 
+            // cboStates
+            // 
+            this.cboStates.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
+            this.cboStates.FormattingEnabled = true;
+            this.cboStates.Location = new System.Drawing.Point(88, 143);
+            this.cboStates.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.cboStates.Name = "cboStates";
+            this.cboStates.Size = new System.Drawing.Size(172, 24);
+            this.cboStates.TabIndex = 23;
+            this.cboStates.Tag = "State";
+            // 
+            // Label6
+            // 
+            this.Label6.AutoSize = true;
+            this.Label6.Location = new System.Drawing.Point(16, 148);
+            this.Label6.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label6.Name = "Label6";
+            this.Label6.Size = new System.Drawing.Size(45, 17);
+            this.Label6.TabIndex = 22;
+            this.Label6.Text = "State:";
+            // 
+            // txtCity
+            // 
+            this.txtCity.Location = new System.Drawing.Point(88, 111);
+            this.txtCity.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtCity.MaxLength = 50;
+            this.txtCity.Name = "txtCity";
+            this.txtCity.Size = new System.Drawing.Size(372, 22);
+            this.txtCity.TabIndex = 21;
+            this.txtCity.Tag = "City";
+            // 
+            // Label5
+            // 
+            this.Label5.AutoSize = true;
+            this.Label5.Location = new System.Drawing.Point(16, 114);
+            this.Label5.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label5.Name = "Label5";
+            this.Label5.Size = new System.Drawing.Size(35, 17);
+            this.Label5.TabIndex = 20;
+            this.Label5.Text = "City:";
+            // 
+            // txtAddress2
+            // 
+            this.txtAddress2.Location = new System.Drawing.Point(88, 79);
+            this.txtAddress2.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtAddress2.MaxLength = 50;
+            this.txtAddress2.Name = "txtAddress2";
+            this.txtAddress2.Size = new System.Drawing.Size(372, 22);
+            this.txtAddress2.TabIndex = 19;
+            // 
+            // txtAddress1
+            // 
+            this.txtAddress1.Location = new System.Drawing.Point(88, 47);
+            this.txtAddress1.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtAddress1.MaxLength = 50;
+            this.txtAddress1.Name = "txtAddress1";
+            this.txtAddress1.Size = new System.Drawing.Size(372, 22);
+            this.txtAddress1.TabIndex = 18;
+            this.txtAddress1.Tag = "Address1";
+            // 
+            // Label3
+            // 
+            this.Label3.AutoSize = true;
+            this.Label3.Location = new System.Drawing.Point(16, 50);
+            this.Label3.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label3.Name = "Label3";
+            this.Label3.Size = new System.Drawing.Size(64, 17);
+            this.Label3.TabIndex = 17;
+            this.Label3.Text = "Address:";
+            // 
+            // txtName
+            // 
+            this.txtName.Location = new System.Drawing.Point(88, 15);
+            this.txtName.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtName.MaxLength = 50;
+            this.txtName.Name = "txtName";
+            this.txtName.Size = new System.Drawing.Size(372, 22);
+            this.txtName.TabIndex = 16;
+            this.txtName.Tag = "Name";
+            // 
+            // Label2
+            // 
+            this.Label2.AutoSize = true;
+            this.Label2.Location = new System.Drawing.Point(16, 18);
+            this.Label2.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label2.Name = "Label2";
+            this.Label2.Size = new System.Drawing.Size(49, 17);
+            this.Label2.TabIndex = 15;
+            this.Label2.Text = "Name:";
+            // 
+            // frmAddModifyVendor
+            // 
+            this.AcceptButton = this.btnAccept;
+            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 16F);
+            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
+            this.CancelButton = this.btnCancel;
+            this.ClientSize = new System.Drawing.Size(505, 539);
+            this.ControlBox = false;
+            this.Controls.Add(this.btnCancel);
+            this.Controls.Add(this.btnAccept);
+            this.Controls.Add(this.GroupBox2);
+            this.Controls.Add(this.GroupBox1);
+            this.Controls.Add(this.txtZipCode);
+            this.Controls.Add(this.Label7);
+            this.Controls.Add(this.cboStates);
+            this.Controls.Add(this.Label6);
+            this.Controls.Add(this.txtCity);
+            this.Controls.Add(this.Label5);
+            this.Controls.Add(this.txtAddress2);
+            this.Controls.Add(this.txtAddress1);
+            this.Controls.Add(this.Label3);
+            this.Controls.Add(this.txtName);
+            this.Controls.Add(this.Label2);
+            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog;
+            this.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.MaximizeBox = false;
+            this.MinimizeBox = false;
+            this.Name = "frmAddModifyVendor";
+            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
+            this.Text = "Add/Modify Vendor";
+            this.Load += new System.EventHandler(this.frmAddModifyVendor_Load);
+            this.GroupBox2.ResumeLayout(false);
+            this.GroupBox2.PerformLayout();
+            this.GroupBox1.ResumeLayout(false);
+            this.GroupBox1.PerformLayout();
+            this.ResumeLayout(false);
+            this.PerformLayout();
+
+        }
+
+        #endregion
+
+        internal System.Windows.Forms.Button btnCancel;
+        internal System.Windows.Forms.Button btnAccept;
+        internal System.Windows.Forms.GroupBox GroupBox2;
+        internal System.Windows.Forms.ComboBox cboAccounts;
+        internal System.Windows.Forms.Label Label10;
+        internal System.Windows.Forms.ComboBox cboTerms;
+        internal System.Windows.Forms.Label Label1;
+        internal System.Windows.Forms.GroupBox GroupBox1;
+        internal System.Windows.Forms.TextBox txtLastName;
+        internal System.Windows.Forms.Label Label9;
+        internal System.Windows.Forms.TextBox txtFirstName;
+        internal System.Windows.Forms.Label Label8;
+        internal System.Windows.Forms.TextBox txtPhone;
+        internal System.Windows.Forms.Label Label4;
+        internal System.Windows.Forms.TextBox txtZipCode;
+        internal System.Windows.Forms.Label Label7;
+        internal System.Windows.Forms.ComboBox cboStates;
+        internal System.Windows.Forms.Label Label6;
+        internal System.Windows.Forms.TextBox txtCity;
+        internal System.Windows.Forms.Label Label5;
+        internal System.Windows.Forms.TextBox txtAddress2;
+        internal System.Windows.Forms.TextBox txtAddress1;
+        internal System.Windows.Forms.Label Label3;
+        internal System.Windows.Forms.TextBox txtName;
+        internal System.Windows.Forms.Label Label2;
+    }
+}
\ No newline at end of file
diff --git a/Student Files/VendorMaintenance/frmAddModifyVendor.cs b/Student Files/VendorMaintenance/frmAddModifyVendor.cs
new file mode 100644
index 0000000..a362360
--- /dev/null
+++ b/Student Files/VendorMaintenance/frmAddModifyVendor.cs	
@@ -0,0 +1,198 @@
+﻿using System;
+using System.Collections.Generic;
+using System.ComponentModel;
+using System.Data;
+using System.Drawing;
+using System.Linq;
+using System.Text;
+using System.Windows.Forms;
+using System.Data.Linq;
+
+namespace VendorMaintenance
+{
+    public partial class frmAddModifyVendor : Form
+    {
+        public frmAddModifyVendor()
+        {
+            InitializeComponent();
+        }
+
+        public bool addVendor;
+        public Vendor vendor;
+
+        private void frmAddModifyVendor_Load(object sender, EventArgs e)
+        {
+            this.LoadComboBoxes();
+            if (addVendor)
+            {
+                this.Text = "Add Vendor";
+                cboStates.SelectedIndex = -1;
+                cboTerms.SelectedIndex = -1;
+                cboAccounts.SelectedIndex = -1;
+            }
+            else
+            {
+                this.Text = "Modify Vendor";
+                this.DisplayVendorData();
+            }
+        }
+
+        private void LoadComboBoxes()
+        {
+            try
+            {
+                var states = from state in DataContext.payables.States
+                             orderby state.StateName
+                             select new { state.StateCode, state.StateName };
+                cboStates.DataSource = states;
+                cboStates.DisplayMember = "StateName";
+                cboStates.ValueMember = "StateCode";
+
+                var terms = from term in DataContext.payables.Terms
+                            orderby term.Description
+                            select new { term.TermsID, term.Description };
+                cboTerms.DataSource = terms;
+                cboTerms.DisplayMember = "Description";
+                cboTerms.ValueMember = "TermsID";
+
+                var accounts = from account in DataContext.payables.GLAccounts
+                               orderby account.Description
+                               select account;
+                cboAccounts.DataSource = accounts;
+                cboAccounts.DisplayMember = "Description";
+                cboAccounts.ValueMember = "AccountNo";
+            }
+            catch (Exception ex)
+            {
+                MessageBox.Show(ex.Message, ex.GetType().ToString());
+            }
+        }
+
+        private void DisplayVendorData()
+        {
+            txtName.Text = vendor.Name;
+            txtAddress1.Text = vendor.Address1;
+            txtAddress2.Text = vendor.Address2;
+            txtCity.Text = vendor.City;
+            cboStates.SelectedValue = vendor.State;
+            txtZipCode.Text = vendor.ZipCode;
+            cboTerms.SelectedValue = vendor.DefaultTermsID;
+            cboAccounts.SelectedValue = vendor.DefaultAccountNo;
+            if (vendor.Phone == "")
+                txtPhone.Text = "";
+            else
+                txtPhone.Text = FormattedPhoneNumber(vendor.Phone);
+            txtFirstName.Text = vendor.ContactFName;
+            txtLastName.Text = vendor.ContactLName;
+        }
+
+        private string FormattedPhoneNumber(string phone)
+        {
+            return phone.Substring(0, 3) + "." +
+                phone.Substring(3, 3) + "." +
+                phone.Substring(6, 4);
+        }
+
+        private void btnAccept_Click(object sender, EventArgs e)
+        {
+            if (IsValidData())
+            {
+                if (addVendor)
+                {
+                    vendor = new Vendor();
+                    this.PutVendorData(vendor);
+                    DataContext.payables.Vendors.InsertOnSubmit(vendor);
+                    try
+                    {
+                        DataContext.payables.SubmitChanges();
+                        this.DialogResult = DialogResult.OK;
+                    }
+                    catch (Exception ex)
+                    {
+                        MessageBox.Show(ex.Message, ex.GetType().ToString());
+                    }
+                }
+                else
+                {
+                    this.PutVendorData(vendor);
+                    try
+                    {
+                        DataContext.payables.SubmitChanges();
+                        this.DialogResult = DialogResult.OK;
+                    }
+                    catch (ChangeConflictException)
+                    {
+                        DataContext.GetCurrentValues();
+                        if (DataContext.vendorDeleted)
+                        {
+                            MessageBox.Show("Another user has deleted " +
+                                "that vendor.", "Database Error");
+                            this.DialogResult = DialogResult.Abort;
+                        }
+                        else
+                        {
+                            MessageBox.Show("Another user has updated " +
+                                "that vendor.", "Database Error");
+                            this.DialogResult = DialogResult.Retry;
+                        }
+                    }
+                    catch (Exception ex)
+                    {
+                        MessageBox.Show(ex.Message, ex.GetType().ToString());
+                    }
+                }
+            }
+        }
+
+        private bool IsValidData()
+        {
+            if (Validator.IsPresent(txtName) &&
+                Validator.IsPresent(txtAddress1) &&
+                Validator.IsPresent(txtCity) &&
+                Validator.IsPresent(cboStates) &&
+                Validator.IsPresent(txtZipCode) &&
+                Validator.IsInt32(txtZipCode) &&
+                Validator.IsPresent(cboTerms) &&
+                Validator.IsPresent(cboAccounts))
+            {
+                string state = cboStates.SelectedValue.ToString();
+                var zipRange = (from s in DataContext.payables.States
+                                where s.StateCode == state
+                                select new { s.FirstZipCode, s.LastZipCode })
+                                .Single();
+                if (Validator.IsStateZipCode(txtZipCode, zipRange.FirstZipCode,
+                    zipRange.LastZipCode))
+                {
+                    if (txtPhone.Text != "")
+                    {
+                        if (Validator.IsPhoneNumber(txtPhone))
+                            return true;
+                        else
+                            return false;
+                    }
+                    else
+                        return true;
+                }
+                else
+                    return false;
+            }
+            else
+                return false;
+        }
+
+        private void PutVendorData(Vendor vendor)
+        {
+            vendor.Name = txtName.Text;
+            vendor.Address1 = txtAddress1.Text;
+            vendor.Address2 = txtAddress2.Text;
+            vendor.City = txtCity.Text;
+            vendor.State = cboStates.SelectedValue.ToString();
+            vendor.ZipCode = txtZipCode.Text;
+            vendor.DefaultTermsID = (int)cboTerms.SelectedValue;
+            vendor.DefaultAccountNo = (int)cboAccounts.SelectedValue;
+            vendor.Phone = txtPhone.Text.Replace(".", "");
+            vendor.ContactFName = txtFirstName.Text;
+            vendor.ContactLName = txtLastName.Text;
+        }
+    }
+}
diff --git a/Student Files/VendorMaintenance/frmVendorMaintenance.Designer.cs b/Student Files/VendorMaintenance/frmVendorMaintenance.Designer.cs
new file mode 100644
index 0000000..d98b180
--- /dev/null
+++ b/Student Files/VendorMaintenance/frmVendorMaintenance.Designer.cs	
@@ -0,0 +1,299 @@
+﻿namespace VendorMaintenance
+{
+    partial class frmVendorMaintenance
+    {
+        /// <summary>
+        /// Required designer variable.
+        /// </summary>
+        private System.ComponentModel.IContainer components = null;
+
+        /// <summary>
+        /// Clean up any resources being used.
+        /// </summary>
+        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
+        protected override void Dispose(bool disposing)
+        {
+            if (disposing && (components != null))
+            {
+                components.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+
+        #region Windows Form Designer generated code
+
+        /// <summary>
+        /// Required method for Designer support - do not modify
+        /// the contents of this method with the code editor.
+        /// </summary>
+        private void InitializeComponent()
+        {
+            this.btnExit = new System.Windows.Forms.Button();
+            this.btnDelete = new System.Windows.Forms.Button();
+            this.btnModify = new System.Windows.Forms.Button();
+            this.btnAdd = new System.Windows.Forms.Button();
+            this.txtState = new System.Windows.Forms.TextBox();
+            this.btnGetVendor = new System.Windows.Forms.Button();
+            this.txtVendorID = new System.Windows.Forms.TextBox();
+            this.Label1 = new System.Windows.Forms.Label();
+            this.txtZipCode = new System.Windows.Forms.TextBox();
+            this.Label7 = new System.Windows.Forms.Label();
+            this.Label6 = new System.Windows.Forms.Label();
+            this.txtCity = new System.Windows.Forms.TextBox();
+            this.Label5 = new System.Windows.Forms.Label();
+            this.txtAddress2 = new System.Windows.Forms.TextBox();
+            this.txtAddress1 = new System.Windows.Forms.TextBox();
+            this.Label3 = new System.Windows.Forms.Label();
+            this.txtName = new System.Windows.Forms.TextBox();
+            this.Label2 = new System.Windows.Forms.Label();
+            this.SuspendLayout();
+            // 
+            // btnExit
+            // 
+            this.btnExit.DialogResult = System.Windows.Forms.DialogResult.Cancel;
+            this.btnExit.Location = new System.Drawing.Point(378, 252);
+            this.btnExit.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnExit.Name = "btnExit";
+            this.btnExit.Size = new System.Drawing.Size(100, 28);
+            this.btnExit.TabIndex = 50;
+            this.btnExit.Text = "Exit";
+            this.btnExit.UseVisualStyleBackColor = true;
+            this.btnExit.Click += new System.EventHandler(this.btnExit_Click);
+            // 
+            // btnDelete
+            // 
+            this.btnDelete.Enabled = false;
+            this.btnDelete.Location = new System.Drawing.Point(239, 252);
+            this.btnDelete.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnDelete.Name = "btnDelete";
+            this.btnDelete.Size = new System.Drawing.Size(100, 28);
+            this.btnDelete.TabIndex = 49;
+            this.btnDelete.Text = "Delete";
+            this.btnDelete.UseVisualStyleBackColor = true;
+            this.btnDelete.Click += new System.EventHandler(this.btnDelete_Click);
+            // 
+            // btnModify
+            // 
+            this.btnModify.Enabled = false;
+            this.btnModify.Location = new System.Drawing.Point(131, 252);
+            this.btnModify.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnModify.Name = "btnModify";
+            this.btnModify.Size = new System.Drawing.Size(100, 28);
+            this.btnModify.TabIndex = 48;
+            this.btnModify.Text = "Modify";
+            this.btnModify.UseVisualStyleBackColor = true;
+            this.btnModify.Click += new System.EventHandler(this.btnModify_Click);
+            // 
+            // btnAdd
+            // 
+            this.btnAdd.Location = new System.Drawing.Point(23, 252);
+            this.btnAdd.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnAdd.Name = "btnAdd";
+            this.btnAdd.Size = new System.Drawing.Size(100, 28);
+            this.btnAdd.TabIndex = 47;
+            this.btnAdd.Text = "Add";
+            this.btnAdd.UseVisualStyleBackColor = true;
+            this.btnAdd.Click += new System.EventHandler(this.btnAdd_Click);
+            // 
+            // txtState
+            // 
+            this.txtState.Location = new System.Drawing.Point(105, 191);
+            this.txtState.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtState.Name = "txtState";
+            this.txtState.ReadOnly = true;
+            this.txtState.Size = new System.Drawing.Size(172, 22);
+            this.txtState.TabIndex = 46;
+            this.txtState.TabStop = false;
+            // 
+            // btnGetVendor
+            // 
+            this.btnGetVendor.Location = new System.Drawing.Point(181, 17);
+            this.btnGetVendor.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.btnGetVendor.Name = "btnGetVendor";
+            this.btnGetVendor.Size = new System.Drawing.Size(100, 28);
+            this.btnGetVendor.TabIndex = 45;
+            this.btnGetVendor.Text = "Get Vendor";
+            this.btnGetVendor.UseVisualStyleBackColor = true;
+            this.btnGetVendor.Click += new System.EventHandler(this.btnGetVendor_Click);
+            // 
+            // txtVendorID
+            // 
+            this.txtVendorID.Location = new System.Drawing.Point(105, 17);
+            this.txtVendorID.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtVendorID.Name = "txtVendorID";
+            this.txtVendorID.Size = new System.Drawing.Size(65, 22);
+            this.txtVendorID.TabIndex = 44;
+            this.txtVendorID.Tag = "Vendor ID";
+            // 
+            // Label1
+            // 
+            this.Label1.AutoSize = true;
+            this.Label1.Location = new System.Drawing.Point(20, 21);
+            this.Label1.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label1.Name = "Label1";
+            this.Label1.Size = new System.Drawing.Size(75, 17);
+            this.Label1.TabIndex = 43;
+            this.Label1.Text = "Vendor ID:";
+            // 
+            // txtZipCode
+            // 
+            this.txtZipCode.Location = new System.Drawing.Point(372, 192);
+            this.txtZipCode.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtZipCode.MaxLength = 20;
+            this.txtZipCode.Name = "txtZipCode";
+            this.txtZipCode.ReadOnly = true;
+            this.txtZipCode.Size = new System.Drawing.Size(105, 22);
+            this.txtZipCode.TabIndex = 42;
+            this.txtZipCode.TabStop = false;
+            // 
+            // Label7
+            // 
+            this.Label7.AutoSize = true;
+            this.Label7.Location = new System.Drawing.Point(295, 196);
+            this.Label7.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label7.Name = "Label7";
+            this.Label7.Size = new System.Drawing.Size(67, 17);
+            this.Label7.TabIndex = 41;
+            this.Label7.Text = "Zip code:";
+            // 
+            // Label6
+            // 
+            this.Label6.AutoSize = true;
+            this.Label6.Location = new System.Drawing.Point(20, 196);
+            this.Label6.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label6.Name = "Label6";
+            this.Label6.Size = new System.Drawing.Size(45, 17);
+            this.Label6.TabIndex = 40;
+            this.Label6.Text = "State:";
+            // 
+            // txtCity
+            // 
+            this.txtCity.Location = new System.Drawing.Point(105, 160);
+            this.txtCity.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtCity.MaxLength = 50;
+            this.txtCity.Name = "txtCity";
+            this.txtCity.ReadOnly = true;
+            this.txtCity.Size = new System.Drawing.Size(372, 22);
+            this.txtCity.TabIndex = 39;
+            this.txtCity.TabStop = false;
+            // 
+            // Label5
+            // 
+            this.Label5.AutoSize = true;
+            this.Label5.Location = new System.Drawing.Point(20, 164);
+            this.Label5.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label5.Name = "Label5";
+            this.Label5.Size = new System.Drawing.Size(35, 17);
+            this.Label5.TabIndex = 38;
+            this.Label5.Text = "City:";
+            // 
+            // txtAddress2
+            // 
+            this.txtAddress2.Location = new System.Drawing.Point(105, 128);
+            this.txtAddress2.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtAddress2.MaxLength = 50;
+            this.txtAddress2.Name = "txtAddress2";
+            this.txtAddress2.ReadOnly = true;
+            this.txtAddress2.Size = new System.Drawing.Size(372, 22);
+            this.txtAddress2.TabIndex = 37;
+            this.txtAddress2.TabStop = false;
+            // 
+            // txtAddress1
+            // 
+            this.txtAddress1.Location = new System.Drawing.Point(105, 96);
+            this.txtAddress1.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtAddress1.MaxLength = 50;
+            this.txtAddress1.Name = "txtAddress1";
+            this.txtAddress1.ReadOnly = true;
+            this.txtAddress1.Size = new System.Drawing.Size(372, 22);
+            this.txtAddress1.TabIndex = 36;
+            this.txtAddress1.TabStop = false;
+            // 
+            // Label3
+            // 
+            this.Label3.AutoSize = true;
+            this.Label3.Location = new System.Drawing.Point(20, 100);
+            this.Label3.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label3.Name = "Label3";
+            this.Label3.Size = new System.Drawing.Size(64, 17);
+            this.Label3.TabIndex = 35;
+            this.Label3.Text = "Address:";
+            // 
+            // txtName
+            // 
+            this.txtName.Location = new System.Drawing.Point(105, 64);
+            this.txtName.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.txtName.MaxLength = 50;
+            this.txtName.Name = "txtName";
+            this.txtName.ReadOnly = true;
+            this.txtName.Size = new System.Drawing.Size(372, 22);
+            this.txtName.TabIndex = 34;
+            this.txtName.TabStop = false;
+            // 
+            // Label2
+            // 
+            this.Label2.AutoSize = true;
+            this.Label2.Location = new System.Drawing.Point(20, 68);
+            this.Label2.Margin = new System.Windows.Forms.Padding(4, 0, 4, 0);
+            this.Label2.Name = "Label2";
+            this.Label2.Size = new System.Drawing.Size(49, 17);
+            this.Label2.TabIndex = 33;
+            this.Label2.Text = "Name:";
+            // 
+            // frmVendorMaintenance
+            // 
+            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 16F);
+            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
+            this.CancelButton = this.btnExit;
+            this.ClientSize = new System.Drawing.Size(506, 323);
+            this.Controls.Add(this.btnExit);
+            this.Controls.Add(this.btnDelete);
+            this.Controls.Add(this.btnModify);
+            this.Controls.Add(this.btnAdd);
+            this.Controls.Add(this.txtState);
+            this.Controls.Add(this.btnGetVendor);
+            this.Controls.Add(this.txtVendorID);
+            this.Controls.Add(this.Label1);
+            this.Controls.Add(this.txtZipCode);
+            this.Controls.Add(this.Label7);
+            this.Controls.Add(this.Label6);
+            this.Controls.Add(this.txtCity);
+            this.Controls.Add(this.Label5);
+            this.Controls.Add(this.txtAddress2);
+            this.Controls.Add(this.txtAddress1);
+            this.Controls.Add(this.Label3);
+            this.Controls.Add(this.txtName);
+            this.Controls.Add(this.Label2);
+            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle;
+            this.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
+            this.Name = "frmVendorMaintenance";
+            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
+            this.Text = "Vendor Maintenance";
+            this.ResumeLayout(false);
+            this.PerformLayout();
+
+        }
+
+        #endregion
+
+        internal System.Windows.Forms.Button btnExit;
+        internal System.Windows.Forms.Button btnDelete;
+        internal System.Windows.Forms.Button btnModify;
+        internal System.Windows.Forms.Button btnAdd;
+        internal System.Windows.Forms.TextBox txtState;
+        internal System.Windows.Forms.Button btnGetVendor;
+        internal System.Windows.Forms.TextBox txtVendorID;
+        internal System.Windows.Forms.Label Label1;
+        internal System.Windows.Forms.TextBox txtZipCode;
+        internal System.Windows.Forms.Label Label7;
+        internal System.Windows.Forms.Label Label6;
+        internal System.Windows.Forms.TextBox txtCity;
+        internal System.Windows.Forms.Label Label5;
+        internal System.Windows.Forms.TextBox txtAddress2;
+        internal System.Windows.Forms.TextBox txtAddress1;
+        internal System.Windows.Forms.Label Label3;
+        internal System.Windows.Forms.TextBox txtName;
+        internal System.Windows.Forms.Label Label2;
+    }
+}
+
diff --git a/Student Files/VendorMaintenance/frmVendorMaintenance.cs b/Student Files/VendorMaintenance/frmVendorMaintenance.cs
new file mode 100644
index 0000000..8d340a0
--- /dev/null
+++ b/Student Files/VendorMaintenance/frmVendorMaintenance.cs	
@@ -0,0 +1,138 @@
+﻿using System;
+using System.Collections.Generic;
+using System.ComponentModel;
+using System.Data;
+using System.Drawing;
+using System.Linq;
+using System.Text;
+using System.Windows.Forms;
+using System.Data.Linq;
+
+namespace VendorMaintenance
+{
+    public partial class frmVendorMaintenance : Form
+    {
+        public frmVendorMaintenance()
+        {
+            InitializeComponent();
+        }
+
+        Vendor selectedVendor;
+
+        private void btnGetVendor_Click(object sender, EventArgs e)
+        {
+            if (Validator.IsPresent(txtVendorID) &&
+                Validator.IsInt32(txtVendorID))
+            {
+                try
+                {
+                    selectedVendor =
+                        (from vendor in DataContext.payables.Vendors
+                         where vendor.VendorID == Convert.ToInt32(txtVendorID.Text)
+                         select vendor).Single();
+                    this.DisplayVendor();
+                }
+                catch (InvalidOperationException)
+                {
+                    MessageBox.Show("No vendor found with this ID. " +
+                        "Please try again.", "Vendor Not Found");
+                    this.ClearControls();
+                    txtVendorID.Focus();
+                }
+                catch (Exception ex)
+                {
+                    MessageBox.Show(ex.Message, ex.GetType().ToString());
+                }
+            }
+        }
+
+        private void DisplayVendor()
+        {
+            txtName.Text = selectedVendor.Name;
+            txtAddress1.Text = selectedVendor.Address1;
+            txtAddress2.Text = selectedVendor.Address2;
+            txtCity.Text = selectedVendor.City;
+            txtState.Text = selectedVendor.State;
+            txtZipCode.Text = selectedVendor.ZipCode;
+            btnModify.Enabled = true;
+            btnDelete.Enabled = true;
+        }
+
+        private void ClearControls()
+        {
+            txtName.Text = "";
+            txtAddress1.Text = "";
+            txtAddress2.Text = "";
+            txtCity.Text = "";
+            txtState.Text = "";
+            txtZipCode.Text = "";
+            btnModify.Enabled = false;
+            btnDelete.Enabled = false;
+        }
+
+        private void btnAdd_Click(object sender, EventArgs e)
+        {
+            frmAddModifyVendor addModifyVendorForm = new frmAddModifyVendor();
+            addModifyVendorForm.addVendor = true;
+            DialogResult result = addModifyVendorForm.ShowDialog();
+            if (result == DialogResult.OK)
+            {
+                selectedVendor = addModifyVendorForm.vendor;
+                txtVendorID.Text = selectedVendor.VendorID.ToString();
+                this.DisplayVendor();
+            }
+        }
+
+        private void btnModify_Click(object sender, EventArgs e)
+        {
+            frmAddModifyVendor addModifyVendorForm = new frmAddModifyVendor();
+            addModifyVendorForm.addVendor = false;
+            addModifyVendorForm.vendor = selectedVendor;
+            DialogResult result = addModifyVendorForm.ShowDialog();
+            if (result == DialogResult.OK || result == DialogResult.Retry)
+            {
+                selectedVendor = addModifyVendorForm.vendor;
+                this.DisplayVendor();
+            }
+            else if (result == DialogResult.Abort)
+            {
+                txtVendorID.Text = "";
+                this.ClearControls();
+            }
+        }
+
+        private void btnDelete_Click(object sender, EventArgs e)
+        {
+            DialogResult result = 
+                MessageBox.Show("Delete " + selectedVendor.Name + "?",
+                "Confirm Delete", MessageBoxButtons.YesNo, 
+                MessageBoxIcon.Question);
+            if (result == DialogResult.Yes)
+            {
+                try
+                {
+                    DataContext.payables.Vendors.DeleteOnSubmit(selectedVendor);
+                    DataContext.payables.SubmitChanges();
+                    txtVendorID.Text = "";
+                    this.ClearControls();
+                }
+                catch (ChangeConflictException)
+                {
+                    DataContext.GetCurrentValues();
+                    MessageBox.Show("Another user has updated that vendor.",
+                        "Database Error");
+                    this.DisplayVendor();
+                }
+                catch (Exception ex)
+                {
+                    MessageBox.Show(ex.Message, ex.GetType().ToString());
+                }
+            }
+        }
+
+        private void btnExit_Click(object sender, EventArgs e)
+        {
+            this.Close();
+        }
+    }
+}
-- 
2.11.0.windows.1

